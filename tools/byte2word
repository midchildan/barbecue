#!/usr/bin/env python3

# barbecue - a simple processor based on RISC-V
# Copyright Â© 2017 Team Barbecue
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import fileinput
from itertools import zip_longest

WORD_SIZE = 4

# https://docs.python.org/3.6/library/itertools.html#itertools-recipes
def grouper(n, iterable, fillvalue=None):
    args = [iter(iterable)] * n
    return zip_longest(fillvalue=fillvalue, *args)

def main():
    for line in fileinput.input():
        if line[0] == '@':
            mem_idx = int(line[1:-1], 16) // WORD_SIZE
            print('@{:x}'.format(mem_idx))
            continue

        for word in grouper(WORD_SIZE, line.split(), '00'):
            word_le = reversed(word)
            print(''.join(word_le))

if __name__ == "__main__":
    main()
